---
- name: Provisioning EC2 Instance
  hosts: localhost
  connection: local

  vars:
    key_name: ansible_runner
    region: ap-southeast-1
    image: ami-0df7a207adb9748c7
    id: "ansible-runner"
    sec_group: "{{ id }}-sec"

  tasks:
    - name: Generate SSH Key "{{ key_name }}"
      tags: "create-ssh-key"
      community.crypto.openssh_keypair:
        path: "~/.ssh/{{ key_name }}"
        type: rsa
        size: 4096
        state: present
        force: false

    - name: Provisioning EC2 instances
      tags: "create-runner"
      block:
        - name: Upload public key to AWS
          amazon.aws.ec2_key:
            name: "{{ key_name }}"
            key_material: "{{ lookup('file', '~/.ssh/{{ key_name }}.pub') }}"
            region: "{{ region }}"
            # aws_access_key: "{{ ec2_access_key }}"
            # aws_secret_key: "{{ ec2_secret_key }}"

        - name: Create security group
          amazon.aws.ec2_security_group:
            name: "{{ sec_group }}"
            description: "Sec Group for {{ id }}"
            region: "{{ region }}"
            # aws_access_key: "{{ ec2_access_key }}"
            # aws_secret_key: "{{ ec2_secret_key }}"
            rules:
              - proto: tcp
                ports:
                  - 22
                cidr_ip:
                  - 0.0.0.0/0
                rule_desc: "Allow SSH Port inside Ansible"
          register: result_sec_group

        - name: IAM Role for work with AWS resource
          community.aws.iam_role:
            name: "{{ id }}-role"
            assume_role_policy_document: "{{ lookup('file', './data/ansible-role-policies.json') }}"
            managed_policies:
              - arn:aws:iam::aws:policy/AdministratorAccess
            create_instance_profile: true
            purge_policies: true
            state: present

        - name: Provision instance
          amazon.aws.ec2_instance:
            # aws_access_key: "{{ ec2_access_key }}"
            # aws_secret_key: "{{ ec2_secret_key }}"
            key_name: "{{ key_name }}"
            image_id: "{{ image }}"
            region: "{{ region }}"
            security_group: "{{ result_sec_group.group_id }}"
            iam_instance_profile: "{{ id }}-role"
            instance_type: t2.micro
            tags:
              Name: "{{ id }}"
            wait: true
            count: 1

        - name: Attact Instance Profile for IAM_ROLE
          ansible.builtin.shell:
            cmd: |
              aws iam add-role-to-instance-profile --instance-profile-name {{ id }}-role --role-name {{ id }}-role
          changed_when: false

    - name: View instance EC2 information
      tags: "view-runner"
      block:
        - name: Get the information of EC2 runner
          amazon.aws.ec2_instance_info:
            filters:
              "tag:Name": "{{ id }}"
              "instance-state-name": "running"
            region: "{{ region }}"
          register: runner_info

        - name: Display infomation of EC2 runner
          ansible.builtin.debug:
            msg: "{{ item.public_ip_address }}"
          with_items: "{{ runner_info.instances }}"

        - name: Output into inventory host of EC2 remote runner
          ansible.builtin.copy:
            content: |
              [ansible-runner]
              {{ item.public_ip_address }} ansible_user=ubuntu
            dest: "../terraform-runner/inventory/hosts"
            mode: "0666"
          with_items: "{{ runner_info.instances }}"
